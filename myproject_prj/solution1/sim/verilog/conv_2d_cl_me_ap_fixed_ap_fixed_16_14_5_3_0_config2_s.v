// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_me_ap_fixed_ap_fixed_16_14_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_TDATA,
        res_V_V_TVALID,
        res_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_pp0_stage0 = 19'd512;
parameter    ap_ST_fsm_state13 = 19'd1024;
parameter    ap_ST_fsm_state14 = 19'd2048;
parameter    ap_ST_fsm_state15 = 19'd4096;
parameter    ap_ST_fsm_state16 = 19'd8192;
parameter    ap_ST_fsm_state17 = 19'd16384;
parameter    ap_ST_fsm_state18 = 19'd32768;
parameter    ap_ST_fsm_state19 = 19'd65536;
parameter    ap_ST_fsm_state20 = 19'd131072;
parameter    ap_ST_fsm_state21 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_TDATA;
output   res_V_V_TVALID;
input   res_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1151:0] layer_in_V;
reg   [31:0] sX;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
wire   [6:0] w2_V_address0;
reg    w2_V_ce0;
wire   [114:0] w2_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln167_fu_418_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    res_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
reg   [0:0] and_ln176_2_reg_950;
reg   [15:0] tmp_V_22_reg_207;
reg   [15:0] tmp_V_21_reg_220;
reg   [15:0] tmp_V_20_reg_233;
reg   [15:0] tmp_V_19_reg_246;
reg   [15:0] tmp_V_18_reg_259;
reg   [15:0] tmp_V_17_reg_272;
reg   [15:0] tmp_V_16_reg_285;
reg   [15:0] tmp_V_15_reg_298;
reg   [6:0] in_index_reg_311;
wire   [4:0] i_fu_424_p2;
reg   [4:0] i_reg_872;
wire    regslice_both_res_V_V_U_apdone_blk;
reg    ap_block_state2;
reg   [15:0] tmp_V_reg_877;
reg   [15:0] tmp_V_8_reg_882;
reg   [15:0] tmp_V_9_reg_887;
reg   [15:0] tmp_V_10_reg_892;
reg   [15:0] tmp_V_11_reg_897;
reg   [15:0] tmp_V_12_reg_902;
reg   [15:0] tmp_V_13_reg_907;
wire   [1151:0] call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_return;
reg   [1151:0] call_ret_reg_912;
reg   [31:0] sX_load_reg_918;
wire   [0:0] icmp_ln176_fu_459_p2;
reg   [0:0] icmp_ln176_reg_923;
reg   [31:0] sY_load_reg_928;
wire   [0:0] icmp_ln176_1_fu_469_p2;
reg   [0:0] icmp_ln176_1_reg_933;
reg   [31:0] pY_load_reg_938;
reg   [31:0] pX_load_reg_944;
wire   [0:0] and_ln176_2_fu_527_p2;
wire   [0:0] icmp_ln74_fu_533_p2;
reg   [0:0] icmp_ln74_reg_954;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state10_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln74_reg_954_pp0_iter1_reg;
wire   [6:0] ir_fu_539_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] trunc_ln83_fu_647_p1;
reg   [15:0] trunc_ln83_reg_963;
wire   [15:0] tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_ap_return;
reg   [15:0] tmpmult_0_V_reg_980;
wire   [15:0] tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_ap_return;
reg   [15:0] tmpmult_1_V_reg_985;
wire   [15:0] tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_ap_return;
reg   [15:0] tmpmult_2_V_reg_990;
wire   [15:0] tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_ap_return;
reg   [15:0] tmpmult_3_V_reg_995;
wire   [15:0] tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_ap_return;
reg   [15:0] tmpmult_4_V_reg_1000;
wire   [15:0] tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_ap_return;
reg   [15:0] tmpmult_5_V_reg_1005;
wire   [15:0] tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_ap_return;
reg   [15:0] tmpmult_6_V_reg_1010;
wire   [15:0] op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_ap_return;
reg   [15:0] op_V_assign_2_0_7_reg_1015;
wire   [15:0] acc_0_V_fu_742_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [15:0] acc_1_V_fu_747_p2;
wire   [15:0] acc_2_V_fu_752_p2;
wire   [15:0] acc_3_V_fu_757_p2;
wire   [15:0] acc_4_V_fu_762_p2;
wire   [15:0] acc_5_V_fu_767_p2;
wire   [15:0] acc_6_V_fu_772_p2;
wire   [15:0] acc_7_V_fu_777_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter1;
reg    call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_start;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_done;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_idle;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_ready;
wire   [127:0] call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_data_V_read;
wire    tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_ap_ready;
wire   [15:0] tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_w_V;
wire    tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_ap_ready;
wire   [15:0] tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_w_V;
wire    tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_ap_ready;
wire   [15:0] tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_w_V;
wire    tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_ap_ready;
wire   [15:0] tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_w_V;
wire    tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_ap_ready;
wire   [15:0] tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_w_V;
wire    tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_ap_ready;
wire   [15:0] tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_w_V;
wire    tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_ap_ready;
wire   [15:0] tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_w_V;
wire    op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_ap_ready;
wire   [15:0] op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_w_V;
reg   [4:0] i_0_i_reg_196;
reg    ap_block_state1;
reg    ap_block_state21_io;
wire   [31:0] select_ln208_fu_849_p3;
reg   [31:0] ap_phi_mux_storemerge_i_phi_fu_325_p4;
wire   [0:0] icmp_ln198_fu_782_p2;
wire   [0:0] icmp_ln202_fu_828_p2;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln83_fu_651_p1;
wire   [31:0] select_ln213_fu_803_p3;
wire   [31:0] add_ln206_fu_833_p2;
wire   [31:0] add_ln211_fu_787_p2;
wire   [30:0] tmp_3_fu_479_p4;
wire   [30:0] tmp_4_fu_499_p4;
wire   [0:0] icmp_ln176_2_fu_489_p2;
wire   [0:0] icmp_ln176_3_fu_509_p2;
wire   [0:0] and_ln176_1_fu_521_p2;
wire   [0:0] and_ln176_fu_515_p2;
wire   [10:0] tmp_1_fu_545_p3;
wire   [10:0] empty_21_fu_553_p2;
wire   [0:0] icmp_ln83_fu_559_p2;
wire   [10:0] sub_ln83_fu_574_p2;
wire   [10:0] sub_ln83_2_fu_586_p2;
reg   [1151:0] tmp_10_fu_565_p4;
wire   [10:0] sub_ln83_1_fu_580_p2;
wire   [10:0] select_ln83_fu_592_p3;
wire   [10:0] select_ln83_2_fu_607_p3;
wire   [10:0] sub_ln83_3_fu_615_p2;
wire   [1151:0] select_ln83_1_fu_600_p3;
wire   [1151:0] zext_ln83_2_fu_621_p1;
wire   [1151:0] zext_ln83_3_fu_625_p1;
wire   [1151:0] lshr_ln83_fu_629_p2;
wire   [1151:0] lshr_ln83_1_fu_635_p2;
wire   [1151:0] and_ln83_fu_641_p2;
wire   [2:0] tmp_2_fu_727_p4;
wire   [31:0] add_ln213_fu_798_p2;
wire   [31:0] add_ln208_fu_844_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg   [15:0] res_V_V_TDATA_int;
reg    res_V_V_TVALID_int;
wire    res_V_V_TREADY_int;
wire    regslice_both_res_V_V_U_vld_out;
reg    ap_condition_419;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
#0 layer_in_V = 1152'd0;
#0 sX = 32'd0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_2d_cl_me_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_w2_V #(
    .DataWidth( 115 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_start),
    .ap_done(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_done),
    .ap_idle(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_idle),
    .ap_ready(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_ready),
    .data_V_read(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_data_V_read),
    .output_V_read(layer_in_V),
    .ap_return(call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370(
    .ap_ready(tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_w_V),
    .ap_return(tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376(
    .ap_ready(tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_w_V),
    .ap_return(tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382(
    .ap_ready(tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_w_V),
    .ap_return(tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388(
    .ap_ready(tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_w_V),
    .ap_return(tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394(
    .ap_ready(tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_w_V),
    .ap_return(tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400(
    .ap_ready(tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_w_V),
    .ap_return(tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406(
    .ap_ready(tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_w_V),
    .ap_return(tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_ap_return)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412(
    .ap_ready(op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_ap_ready),
    .a_V(trunc_ln83_reg_963),
    .w_V(op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_w_V),
    .ap_return(op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_ap_return)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(res_V_V_TDATA_int),
    .vld_in(res_V_V_TVALID_int),
    .ack_in(res_V_V_TREADY_int),
    .data_out(res_V_V_TDATA),
    .vld_out(regslice_both_res_V_V_U_vld_out),
    .ack_out(res_V_V_TREADY),
    .apdone_blk(regslice_both_res_V_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
        i_0_i_reg_196 <= i_reg_872;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_196 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_533_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_311 <= ir_fu_539_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        in_index_reg_311 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
        if ((icmp_ln198_fu_782_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln198_fu_782_p2 == 1'd0)) begin
            pX <= add_ln211_fu_787_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_419)) begin
        if ((icmp_ln202_fu_828_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln202_fu_828_p2 == 1'd0)) begin
            pY <= add_ln206_fu_833_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
        if ((icmp_ln198_fu_782_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln198_fu_782_p2 == 1'd0)) begin
            sX <= select_ln213_fu_803_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_15_reg_298 <= acc_0_V_fu_742_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_15_reg_298 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_16_reg_285 <= acc_1_V_fu_747_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_16_reg_285 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_17_reg_272 <= acc_2_V_fu_752_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_17_reg_272 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_18_reg_259 <= acc_3_V_fu_757_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_18_reg_259 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_19_reg_246 <= acc_4_V_fu_762_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_19_reg_246 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_20_reg_233 <= acc_5_V_fu_767_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_20_reg_233 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_21_reg_220 <= acc_6_V_fu_772_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_21_reg_220 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_V_22_reg_207 <= acc_7_V_fu_777_p2;
    end else if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
        tmp_V_22_reg_207 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        and_ln176_2_reg_950 <= and_ln176_2_fu_527_p2;
        call_ret_reg_912 <= call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_return;
        icmp_ln176_1_reg_933 <= icmp_ln176_1_fu_469_p2;
        icmp_ln176_reg_923 <= icmp_ln176_fu_459_p2;
        layer_in_V <= call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_return;
        pX_load_reg_944 <= pX;
        pY_load_reg_938 <= pY;
        sX_load_reg_918 <= sX;
        sY_load_reg_928 <= sY;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_872 <= i_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln74_reg_954 <= icmp_ln74_fu_533_p2;
        icmp_ln74_reg_954_pp0_iter1_reg <= icmp_ln74_reg_954;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        op_V_assign_2_0_7_reg_1015 <= op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_ap_return;
        tmpmult_0_V_reg_980 <= tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_ap_return;
        tmpmult_1_V_reg_985 <= tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_ap_return;
        tmpmult_2_V_reg_990 <= tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_ap_return;
        tmpmult_3_V_reg_995 <= tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_ap_return;
        tmpmult_4_V_reg_1000 <= tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_ap_return;
        tmpmult_5_V_reg_1005 <= tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_ap_return;
        tmpmult_6_V_reg_1010 <= tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln198_fu_782_p2 == 1'd1))) begin
        sY <= ap_phi_mux_storemerge_i_phi_fu_325_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_V_10_reg_892 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_11_reg_897 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_V_12_reg_902 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_V_13_reg_907 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_8_reg_882 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_9_reg_887 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_reg_877 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_533_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln83_reg_963 <= trunc_ln83_fu_647_p1;
    end
end

always @ (*) begin
    if ((icmp_ln74_fu_533_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln198_fu_782_p2 == 1'd1))) begin
        if ((icmp_ln202_fu_828_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_phi_fu_325_p4 = 32'd0;
        end else if ((icmp_ln202_fu_828_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_phi_fu_325_p4 = select_ln208_fu_849_p3;
        end else begin
            ap_phi_mux_storemerge_i_phi_fu_325_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_phi_fu_325_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_start = 1'b1;
    end else begin
        call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((icmp_ln167_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state21) & (1'd1 == and_ln176_2_reg_950)))) begin
        res_V_V_TDATA_blk_n = res_V_V_TREADY_int;
    end else begin
        res_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        res_V_V_TDATA_int = tmp_V_22_reg_207;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_V_V_TDATA_int = tmp_V_21_reg_220;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        res_V_V_TDATA_int = tmp_V_20_reg_233;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        res_V_V_TDATA_int = tmp_V_19_reg_246;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        res_V_V_TDATA_int = tmp_V_18_reg_259;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_V_V_TDATA_int = tmp_V_17_reg_272;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_V_V_TDATA_int = tmp_V_16_reg_285;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_V_V_TDATA_int = tmp_V_15_reg_298;
    end else begin
        res_V_V_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if ((((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        res_V_V_TVALID_int = 1'b1;
    end else begin
        res_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0))) & (icmp_ln167_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln176_2_fu_527_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln176_2_fu_527_p2) & (data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln74_fu_533_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln74_fu_533_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((res_V_V_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_742_p2 = (tmpmult_0_V_reg_980 + tmp_V_15_reg_298);

assign acc_1_V_fu_747_p2 = (tmpmult_1_V_reg_985 + tmp_V_16_reg_285);

assign acc_2_V_fu_752_p2 = (tmpmult_2_V_reg_990 + tmp_V_17_reg_272);

assign acc_3_V_fu_757_p2 = (tmpmult_3_V_reg_995 + tmp_V_18_reg_259);

assign acc_4_V_fu_762_p2 = (tmpmult_4_V_reg_1000 + tmp_V_19_reg_246);

assign acc_5_V_fu_767_p2 = (tmpmult_5_V_reg_1005 + tmp_V_20_reg_233);

assign acc_6_V_fu_772_p2 = (tmpmult_6_V_reg_1010 + tmp_V_21_reg_220);

assign acc_7_V_fu_777_p2 = (op_V_assign_2_0_7_reg_1015 + tmp_V_22_reg_207);

assign add_ln206_fu_833_p2 = (pY_load_reg_938 + 32'd1);

assign add_ln208_fu_844_p2 = (sY_load_reg_928 + 32'd1);

assign add_ln211_fu_787_p2 = (pX_load_reg_944 + 32'd1);

assign add_ln213_fu_798_p2 = (sX_load_reg_918 + 32'd1);

assign and_ln176_1_fu_521_p2 = (icmp_ln176_3_fu_509_p2 & icmp_ln176_2_fu_489_p2);

assign and_ln176_2_fu_527_p2 = (and_ln176_fu_515_p2 & and_ln176_1_fu_521_p2);

assign and_ln176_fu_515_p2 = (icmp_ln176_fu_459_p2 & icmp_ln176_1_fu_469_p2);

assign and_ln83_fu_641_p2 = (lshr_ln83_fu_629_p2 & lshr_ln83_1_fu_635_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((regslice_both_res_V_V_U_apdone_blk == 1'b1) | ((icmp_ln167_fu_418_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state21_io = ((res_V_V_TREADY_int == 1'b0) & (1'd1 == and_ln176_2_reg_950));
end

always @ (*) begin
    ap_condition_419 = ((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln198_fu_782_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign call_ret_cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_fu_332_data_V_read = {{{{{{{{data_V_V_dout}, {tmp_V_13_reg_907}}, {tmp_V_12_reg_902}}, {tmp_V_11_reg_897}}, {tmp_V_10_reg_892}}, {tmp_V_9_reg_887}}, {tmp_V_8_reg_882}}, {tmp_V_reg_877}};

assign empty_21_fu_553_p2 = (tmp_1_fu_545_p3 | 11'd15);

assign i_fu_424_p2 = (i_0_i_reg_196 + 5'd1);

assign icmp_ln167_fu_418_p2 = ((i_0_i_reg_196 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln176_1_fu_469_p2 = ((sY == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln176_2_fu_489_p2 = (($signed(tmp_3_fu_479_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln176_3_fu_509_p2 = (($signed(tmp_4_fu_499_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_459_p2 = ((sX == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_782_p2 = ((pX_load_reg_944 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_828_p2 = ((pY_load_reg_938 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_533_p2 = ((in_index_reg_311 == 7'd72) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_559_p2 = ((tmp_1_fu_545_p3 > empty_21_fu_553_p2) ? 1'b1 : 1'b0);

assign ir_fu_539_p2 = (in_index_reg_311 + 7'd1);

assign lshr_ln83_1_fu_635_p2 = 1152'd61172327492847069472032393719205726809135813743440799050195397570919697796091958321786863938157971792315844506873509046544459008355036150650333616890210625686064472971480622053109783197015954399612052812141827922088117778074833698589048132156300022844899841969874763871624802603515651998113045708569927237462546233168834543264678118409417047146495 >> zext_ln83_3_fu_625_p1;

assign lshr_ln83_fu_629_p2 = select_ln83_1_fu_600_p3 >> zext_ln83_2_fu_621_p1;

assign op_V_assign_2_0_7_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_412_w_V = tmp_2_fu_727_p4;

assign res_V_V_TVALID = regslice_both_res_V_V_U_vld_out;

assign select_ln208_fu_849_p3 = ((icmp_ln176_1_reg_933[0:0] === 1'b1) ? 32'd2 : add_ln208_fu_844_p2);

assign select_ln213_fu_803_p3 = ((icmp_ln176_reg_923[0:0] === 1'b1) ? 32'd2 : add_ln213_fu_798_p2);

assign select_ln83_1_fu_600_p3 = ((icmp_ln83_fu_559_p2[0:0] === 1'b1) ? tmp_10_fu_565_p4 : call_ret_reg_912);

assign select_ln83_2_fu_607_p3 = ((icmp_ln83_fu_559_p2[0:0] === 1'b1) ? sub_ln83_1_fu_580_p2 : tmp_1_fu_545_p3);

assign select_ln83_fu_592_p3 = ((icmp_ln83_fu_559_p2[0:0] === 1'b1) ? sub_ln83_fu_574_p2 : sub_ln83_2_fu_586_p2);

assign sub_ln83_1_fu_580_p2 = ($signed(11'd1151) - $signed(tmp_1_fu_545_p3));

assign sub_ln83_2_fu_586_p2 = (empty_21_fu_553_p2 - tmp_1_fu_545_p3);

assign sub_ln83_3_fu_615_p2 = ($signed(11'd1151) - $signed(select_ln83_fu_592_p3));

assign sub_ln83_fu_574_p2 = (tmp_1_fu_545_p3 - empty_21_fu_553_p2);

integer ap_tvar_int_0;

always @ (call_ret_reg_912) begin
    for (ap_tvar_int_0 = 1152 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1151 - 0) begin
            tmp_10_fu_565_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_10_fu_565_p4[ap_tvar_int_0] = call_ret_reg_912[1151 - ap_tvar_int_0];
        end
    end
end

assign tmp_1_fu_545_p3 = {{in_index_reg_311}, {4'd0}};

assign tmp_2_fu_727_p4 = {{w2_V_q0[114:112]}};

assign tmp_3_fu_479_p4 = {{pY[31:1]}};

assign tmp_4_fu_499_p4 = {{pX[31:1]}};

assign tmpmult_0_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_370_w_V = w2_V_q0[15:0];

assign tmpmult_1_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_376_w_V = {{w2_V_q0[31:16]}};

assign tmpmult_2_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_382_w_V = {{w2_V_q0[47:32]}};

assign tmpmult_3_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_388_w_V = {{w2_V_q0[63:48]}};

assign tmpmult_4_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_394_w_V = {{w2_V_q0[79:64]}};

assign tmpmult_5_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_400_w_V = {{w2_V_q0[95:80]}};

assign tmpmult_6_V_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_406_w_V = {{w2_V_q0[111:96]}};

assign trunc_ln83_fu_647_p1 = and_ln83_fu_641_p2[15:0];

assign w2_V_address0 = zext_ln83_fu_651_p1;

assign zext_ln83_2_fu_621_p1 = select_ln83_2_fu_607_p3;

assign zext_ln83_3_fu_625_p1 = sub_ln83_3_fu_615_p2;

assign zext_ln83_fu_651_p1 = in_index_reg_311;

endmodule //conv_2d_cl_me_ap_fixed_ap_fixed_16_14_5_3_0_config2_s
